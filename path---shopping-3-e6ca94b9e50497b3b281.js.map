{"version":3,"sources":["webpack:///path---shopping-3-e6ca94b9e50497b3b281.js","webpack:///./.cache/json/shopping-3.json"],"names":["webpackJsonp","339","module","exports","data","markdownRemark","html","frontmatter","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,ggDAAs9CC,aAAsEC,KAAA,aAAAC,MAAA,2BAAsDC","file":"path---shopping-3-e6ca94b9e50497b3b281.js","sourcesContent":["webpackJsonp([132403119420572],{\n\n/***/ 339:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Using a combination of SOLID and TDD, create a RESTful API using a framework of your choice.</p>\\n<ul>\\n<li>A data store will also be required. This can be a local DB or something hosted like Firebase.</li>\\n<li>It is recommended to use <a href=\\\"https://www.getpostman.com/\\\">Postman</a> to conduct api queries, a frontend is not required. (There can be a task to create a frontend for this after this task if you are interested)</li>\\n<li>The API consist of all the features of the Shopping cart project we used in V2. Plus extensions. </li>\\n<li>It is recommended to have three layers.</li>\\n</ul>\\n<p>Controller - Where API commands are received</p>\\n<p>Business layer - Where business logic happens</p>\\n<p>Repository - The interface between the API and the database (and objects)</p>\\n<h3>Extension - Cart ID + Purchase</h3>\\n<p>After a cost has been returned to the user they can use the returned cart ID to then purchase the cart. </p>\\n<h3>Extension - Item Quantities</h3>\\n<p>Items will have a quantity and cannot be sold after they have been exhausted. The user will receive a message saying the sale can not be conducted until the item is in stock or is removed from the order.</p>\\n<h3>Extension - Item list</h3>\\n<p>The API can be queried to return all items along with their cost, weight and quantity.</p>\\n<h3>Extension - Sale history</h3>\\n<p>A list of all previous sales can be queried, Items, quantity and cost should be included.</p>\\n<p><a href=\\\"../TDD\\\">&#x3C; Prev</a> | <a href=\\\"../shopping3_5\\\">Next ></a></p>\",\"frontmatter\":{\"path\":\"/shopping3\",\"title\":\"Shopping Cart 3: REST\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---shopping-3-e6ca94b9e50497b3b281.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Using a combination of SOLID and TDD, create a RESTful API using a framework of your choice.</p>\\n<ul>\\n<li>A data store will also be required. This can be a local DB or something hosted like Firebase.</li>\\n<li>It is recommended to use <a href=\\\"https://www.getpostman.com/\\\">Postman</a> to conduct api queries, a frontend is not required. (There can be a task to create a frontend for this after this task if you are interested)</li>\\n<li>The API consist of all the features of the Shopping cart project we used in V2. Plus extensions. </li>\\n<li>It is recommended to have three layers.</li>\\n</ul>\\n<p>Controller - Where API commands are received</p>\\n<p>Business layer - Where business logic happens</p>\\n<p>Repository - The interface between the API and the database (and objects)</p>\\n<h3>Extension - Cart ID + Purchase</h3>\\n<p>After a cost has been returned to the user they can use the returned cart ID to then purchase the cart. </p>\\n<h3>Extension - Item Quantities</h3>\\n<p>Items will have a quantity and cannot be sold after they have been exhausted. The user will receive a message saying the sale can not be conducted until the item is in stock or is removed from the order.</p>\\n<h3>Extension - Item list</h3>\\n<p>The API can be queried to return all items along with their cost, weight and quantity.</p>\\n<h3>Extension - Sale history</h3>\\n<p>A list of all previous sales can be queried, Items, quantity and cost should be included.</p>\\n<p><a href=\\\"../TDD\\\">&#x3C; Prev</a> | <a href=\\\"../shopping3_5\\\">Next ></a></p>\",\"frontmatter\":{\"path\":\"/shopping3\",\"title\":\"Shopping Cart 3: REST\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/shopping-3.json\n// module id = 339\n// module chunks = 132403119420572"],"sourceRoot":""}